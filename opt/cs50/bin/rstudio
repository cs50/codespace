#!/bin/bash

IMAGE="cs50/rstudio"
NAME="rstudio"

# Formatting
bold=$(tput bold)
normal=$(tput sgr0)

# Helper
function spin() {
    local pid=$1
    local spinner='|/-\'
    while [ -d /proc/$pid ]; do
        for i in $(seq 0 3); do
            printf "\rHit CTRL-C to stop the server [%c] " "${spinner:$i:1}"
            sleep 0.1
        done
    done
    printf "\n"
}

# Check for $1
if [[ $# -eq 1 ]]; then
    if [[ "$1" == "restart" ]]; then
        docker stop  "$NAME" &> /dev/null
        docker rm "$NAME" &> /dev/null
    elif [[ "$1" == "stop" ]]; then
        docker stop "$NAME" &> /dev/null
        docker rm "$NAME" &> /dev/null
        exit $?
    fi
fi

# Check for running image
id=$(docker ps --all --filter "name=$NAME" --quiet)
if [[ -n "$id" ]]; then

    # Stop current container (so as to restart port forwarding)
    docker stop "$id" > /dev/null

    # Try to remove in case created but somehow not started
    docker rm "$id" &> /dev/null
fi

# Pull latest image
docker pull "$IMAGE"

# Ensure preferences exist
touch "/workspaces/$RepositoryName/rstudio-prefs.json"

# Create container
# https://rocker-project.org/images/versioned/rstudio.html#environment-variables
docker create \
    --env DISABLE_AUTH=true \
    --env CODESPACES=true \
    --env CS50_GH_USER="$CS50_GH_USER" \
    --env CS50_TOKEN="$CS50_TOKEN" \
    --name "$NAME" \
    --publish 8787:8787 \
    --rm \
    --volume "$LOCAL_WORKSPACE_FOLDER":"/workspaces/$RepositoryName" \
    --volume "/workspaces/$RepositoryName/rstudio-prefs.json":/home/rstudio/.config/rstudio/rstudio-prefs.json \
    "$IMAGE" > /dev/null

# Customize rstudio-prefs.json
jq ".initial_working_directory = \"/workspaces/$RepositoryName\"" /opt/cs50/lib/rstudio/rstudio-prefs.json > /tmp/rstudio-prefs.json

# Copy files into container
docker cp --quiet /opt/cs50/lib/rstudio/_icons.css rstudio:/tmp
docker cp --quiet /opt/cs50/lib/rstudio/rstudio-server.json rstudio:/etc/rstudio/
docker cp --quiet /opt/cs50/lib/rstudio/rsession.conf rstudio:/etc/rstudio/
docker cp --quiet /tmp/rstudio-prefs.json rstudio:/etc/rstudio/

# Copy monitoring script into container
sudo chmod +x /opt/cs50/lib/rstudio/monitor_rsession.sh
docker cp --quiet /opt/cs50/lib/rstudio/monitor_rsession.sh rstudio:/usr/local/bin/monitor_rsession.sh

# Start container
docker start "$NAME" > /dev/null

# Run the monitoring script in the background
docker exec -d "$NAME" sh -c "/usr/local/bin/monitor_rsession.sh"

# Inject CSS
docker exec "$NAME" sh -c "cat /tmp/_icons.css >> /usr/lib/rstudio-server/www/css/icons.css"

# Attach to container
docker attach "$NAME" &> /dev/null &
pid=$!

# Spin until container stops
spin $pid
wait $pid
